#!/usr/bin/perl

use strict;

sub constant($$) {
    # The maximum length of a string literal is 509 characters in C89.
    # In this version an array of chars is created with a terminating
    # nul char.  This avoids warnings from the compiler when 80 chars
    # is packed into an 80 char array and the terminating nul (\0) lost
    my ($var, $src) = @_;
    print "static const char ${var}[] = {\n";
    my @chars = $src =~ /./gs;
    my @line = ();
    foreach (@chars) {
        s/\\/\\\\/g;
        s/'/\\'/g;
        s/\n/\\n/g;
        push(@line, "\'$_\'");
        if ($#line >= 18) {
            print join(", ", @line), ",\n";
            @line = ();
        }
    }
    if ($#line >= 0) {
        print join(", ", @line), ",\n";
    }
    print "\'\\0\',\n";
    print "};\n\n";
}

local $/ = undef;

print <<EOL;
/**
 *                                !!NOTICE!!
 * This file was automatically generated by mkboot.chars.pl, and includes all of
 * the boot files required by Picrin. PLEASE DO NOT EDIT THIS FILE, changes
 * will be overwritten the next time the script runs.
 */

#include "picrin.h"
#include "picrin/extra.h"

EOL
open(IN, "piclib/boot.scm");
constant("boot_rom", <IN>);
close(IN);
print <<EOL;

#if PIC_USE_LIBRARY
EOL
open(IN, "piclib/library.scm");
constant("boot_library_rom", <IN>);
close(IN);
print <<EOL;
#endif

void
pic_boot(pic_state *pic)
{
  pic_load_cstr(pic, boot_rom);
#if PIC_USE_LIBRARY
  pic_load_cstr(pic, boot_library_rom);
#endif
}
EOL
